{"version":3,"sources":["api/posts.js","api/users.js","api/comments.js","components/user/User.js","components/comment/Comment.js","components/commentList/CommentList.js","components/post/Post.js","components/postList/PostList.js","App.js","index.js"],"names":["posts","fetch","then","response","json","users","comments","User","_ref","user","react_default","a","createElement","Header","as","href","concat","email","name","Comment","_ref$comment","comment","body","Message","CommentList","List","map","comment_Comment","key","id","Post","post","user_User","title","commentList_CommentList","PostList","post_Post","postsWithUsersAndComment","postList","userList","commentList","_objectSpread","find","userId","filter","postId","App","state","isLoading","hasError","getData","_this","setState","Promise","all","_ref2","Object","slicedToArray","catch","finally","_this$state","this","fullPosts","Fragment","Button","type","onClick","length","postList_PostList","React","Component","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.74d469ea.chunk.js","sourcesContent":["const posts = () => fetch('https://jsonplaceholder.typicode.com/posts')\n  .then(response => response.json());\n\nexport default posts;\n","const users = () => fetch('https://jsonplaceholder.typicode.com/users')\n  .then(response => response.json());\n\nexport default users;\n","const comments = () => fetch('https://jsonplaceholder.typicode.com/comments')\n  .then(response => response.json());\n\nexport default comments;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Header } from 'semantic-ui-react';\n\nconst User = ({ user }) => (\n  <div>\n    <Header as=\"h2\">\n      <a href={`mailto:${user.email}`}>{user.name}</a>\n    </Header>\n  </div>\n);\n\nexport default User;\n\nUser.propTypes = {\n  user: PropTypes.shape({\n    name: PropTypes.string,\n    username: PropTypes.string,\n    email: PropTypes.string,\n    phone: PropTypes.string,\n  }).isRequired,\n};\n","import React from 'react';\nimport { Message } from 'semantic-ui-react';\nimport PropTypes from 'prop-types';\n\nconst Comment = ({ comment: { name, body } }) => (\n  <Message>\n    <Message.Header>{name}</Message.Header>\n    <p>{body}</p>\n  </Message>\n);\n\nComment.propTypes = {\n  comment: PropTypes.shape({\n    name: PropTypes.string,\n    body: PropTypes.string,\n    email: PropTypes.string,\n  }).isRequired,\n};\n\nexport default Comment;\n","import React from 'react';\nimport { List } from 'semantic-ui-react';\nimport PropTypes from 'prop-types';\nimport Comment from '../comment/Comment';\n\nconst CommentList = ({ comments }) => (\n  <List>\n    {comments.map(comment => (\n      <Comment comment={comment} key={comment.id} />\n    ))\n    }\n  </List>\n);\n\nCommentList.propTypes = {\n  comments: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nexport default CommentList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Message } from 'semantic-ui-react';\nimport User from '../user/User';\nimport CommentList from '../commentList/CommentList';\n\nconst Post = ({ post }) => (\n  <div>\n    <User user={post.user} />\n    <Message>\n      <Message.Header>{post.title}</Message.Header>\n      <p>{post.body}</p>\n    </Message>\n    <CommentList comments={post.comments} />\n  </div>\n);\n\nexport default Post;\n\nPost.propTypes = {\n  post: PropTypes.shape({\n    title: PropTypes.string,\n    completed: PropTypes.bool,\n    id: PropTypes.number,\n    user: PropTypes.object,\n  }).isRequired,\n};\n","import React from 'react';\nimport { Message } from 'semantic-ui-react';\nimport PropTypes from 'prop-types';\nimport Post from '../post/Post';\n\nconst PostList = ({ posts }) => (\n  <Message>\n    {posts.map(post => (<Post post={post} key={post.id} />))}\n  </Message>\n);\n\nPostList.propTypes = {\n  posts: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nexport default PostList;\n","import React from 'react';\nimport './App.css';\nimport { Button } from 'semantic-ui-react';\nimport posts from './api/posts';\nimport users from './api/users';\nimport comments from './api/comments';\nimport PostList from './components/postList/PostList';\n\nfunction postsWithUsersAndComment(postList, userList, commentList) {\n  return postList.map(post => ({\n    ...post,\n    user: userList.find(user => user.id === post.userId),\n    comments: commentList.filter(comment => comment.postId === post.id),\n  }));\n}\n\nclass App extends React.Component {\n  state = {\n    postList: [],\n    userList: [],\n    commentList: [],\n    isLoading: false,\n    hasError: false,\n  };\n\n  getData = () => {\n    this.setState({\n      isLoading: true,\n      hasError: false,\n    });\n\n    Promise.all([posts(), comments(), users()])\n      .then(([postList, commentList, userList]) => {\n        this.setState({\n          postList,\n          commentList,\n          userList,\n        });\n      })\n      .catch(() => {\n        this.setState({\n          hasError: true,\n        });\n      })\n      .finally(() => {\n        this.setState({\n          isLoading: false,\n        });\n      });\n  };\n\n  render() {\n    const {\n      postList, commentList, userList, isLoading, hasError,\n    } = this.state;\n    const fullPosts = postsWithUsersAndComment(postList, userList, commentList);\n\n    if (isLoading) {\n      return <p>Loading...</p>;\n    }\n\n    if (hasError) {\n      return (\n        <>\n          <p>Loading failed</p>\n          <Button type=\"button\" onClick={this.getData}>Retry</Button>\n        </>\n      );\n    }\n\n    if (!fullPosts.length) {\n      return (\n        <>\n          <p>No posts and comments yet</p>\n          <Button type=\"button\" onClick={this.getData}>Load</Button>\n        </>\n      );\n    }\n\n    return <PostList posts={fullPosts} />;\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}